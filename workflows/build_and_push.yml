name: Build and Push

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name - used to pull the correct addon version, and also to tag the Docker image"
        required: true
      release:
        type: boolean
        description: "Is this a full release?"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag_name }}

      - name: Get docker-slim
        run: |
          SLIM_VERSION=1.40.11

          curl -L -o ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/$SLIM_VERSION/dist_linux.tar.gz
          tar -xvzf ds.tar.gz
          mv dist_linux/* $GITHUB_WORKSPACE
          rm -rfv ds.tar.gz dist_linux/

      - name: Build starter images
        run: |
          cd $GITHUB_WORKSPACE

          gdev_REF=${{ inputs.tag_name }}
          docker build --build-arg="GMOD_BRANCH=live" --build-arg="gdev_REF=$gdev_REF" --tag gdev_fat_live:latest .

      - name: Discern Game Versions
        run: |
          # Create temporary containers
          publicID=$(docker create gdev_fat_live:latest)

          # Copy their manifest files
          docker cp $publicID:/home/container/steamapps/appmanifest_4020.acf $GITHUB_WORKSPACE/appmanifest_public.acf

          # Extract the version
          cat $GITHUB_WORKSPACE/appmanifest_public.acf | grep "buildid\"" | awk -F '"' '/"buildid"/ {print $4}' > $GITHUB_WORKSPACE/gmod_buildid_public.txt

          echo "Public BuildID: $(cat $GITHUB_WORKSPACE/gmod_buildid_public.txt)"

      - name: Make slim images
        run: |
          cd $GITHUB_WORKSPACE
          BASE=ghcr.io/8char/gdev

          rawVersionTag=${{ inputs.tag_name }}

          publicID=$(cat $GITHUB_WORKSPACE/gmod_buildid_public.txt)
          $GITHUB_WORKSPACE/docker-slim build \
            --target gdev_fat_live:latest \
            --remove-file-artifacts \
            --http-probe-off \
            --continue-after 30 \
            --show-clogs --show-blogs \
            --tag $BASE:$rawVersionTag \
            --tag $BASE:gamebuild-$publicID

          # Tag image with "0.27" if we push tag "0.27.5"
          # but not if we push tag "0.27-pre5"
          parentMinorVersion=${rawVersionTag%.*}
          if [[ $parentMinorVersion != "0" ]]; then
            echo "::warning:: Tagging with parent minor version: $parentMinorVersion"
            docker tag $BASE:$rawVersionTag $BASE:$parentMinorVersion
          fi

          if [ "${{ inputs.release }}" = "true" ]; then
            echo "::warning:: Tagging this release as the latest!"
            docker tag $BASE:$rawVersionTag $BASE:latest
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3

        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Tag and push slim images
        run: |
          docker push ghcr.io/8char/gdev --all-tags